unit USale;

interface

uses UProductDescription, UMoney, UPayment, UDate, USalesLineItem,
  System.SysUtils, System.Generics.Defaults, System.Generics.Collections, System.Types;

type
  ISale = interface
    function getBalance(): IMoney;
    function getTotal(): IMoney;
    procedure becomeComplete();
    procedure makeLineItem(desc: IProductDescription; quantity: integer);
    procedure makePayment(cashTendered: IMoney);
  end;

  TSale = class(TInterfacedObject, ISale)
  private
    LineItems: TList<ISalesLineItem>;
    date: TDate;
    isComplete: boolean;
    /// <link>aggregation</link>
    payment: IPayment;
  public
    function getBalance(): IMoney;
    function getTotal(): IMoney;
    procedure becomeComplete();
    procedure makeLineItem(desc: IProductDescription; quantity: integer);
    procedure makePayment(cashTendered: IMoney);
  end;

implementation


end.
